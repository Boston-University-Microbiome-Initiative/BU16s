#!/bin/bash -l
# USAGE:
# Submit to SCC: qsub bu16s.qsub PATH/TO/PARAMETERFILE
# Local run: bash bu16s.qsub PATH/TO/PARAMETERFILE

#$ -P talbot-lab-data
#$ -j y
#$ -pe omp 16


# Load parameters
usage="# USAGE:\n
# Submit to SCC: qsub bu16s.qsub PATH/TO/PARAMETERFILE\n
# Local run: bash bu16s.qsub PATH/TO/PARAMETERFILE\n"
if test -f $1 && ! [ -z $1 ]
then
    PARAMETERS=$1
else
    echo -e $usage
    exit
fi

source $PARAMETERS

# Show welcome
python $SCRIPTSDIR/welcome.py -i $PARAMETERS
echo
echo STARTING AT $(date)
echo

### 1) CREATE QIIME2 ARTIFACT
echo CREATING QIIME ARTIFACT
cmd="python $SCRIPTSDIR/generate_artifact.py -i $INPUTDIR -p $PROJECTNAME -f=$FWD_FMT -r=$REV_FMT -o $INTERMEDIATEDIR"
echo --------------------------------------------------------------------------------------
echo $cmd
echo --------------------------------------------------------------------------------------
echo
eval $cmd


demux_artifact=$INTERMEDIATEDIR/"$PROJECTNAME"_raw.qza
# Add to run parameters
echo "export demux_artifact=$demux_artifact" > $RUNPARAMETERS
echo Saved QIIME artifact to: $demux_artifact
echo

### 2) Trim primers
echo TRIMMING PRIMERS
bash $SCRIPTSDIR/trim.sh $PARAMETERS

### 3) Generate ASVs
echo GENERATING ASVs
bash $SCRIPTSDIR/dada2.sh $PARAMETERS

### 4) Classify
echo CLASSIFY ASVs
bash $SCRIPTSDIR/classify.sh $PARAMETERS

### 5) Export
echo EXTRACTING PROCESSED DATA
source $RUNPARAMETERS
# Extract ASV table
qiime tools export --input-path $dada2_output/table.qza --output-path $dada2_output
# Convert to tsv and remove stupid header
biom convert -i $dada2_output/feature-table.biom -o $dada2_output/feature-table.tsv --to-tsv
sed '1d' $dada2_output/feature-table.tsv > $OUTPUTDIR/"$PROJECTNAME"_ASV.tsv

# Extract taxonomy
qiime tools export --input-path $classification_output --output-path $OUTPUTDIR
mv $OUTPUTDIR/taxonomy.tsv $OUTPUTDIR/"$PROJECTNAME"_SILVA99.tsv

echo
echo PROCESSED DATA IS AVAILABLE AT $OUTPUTDIR
echo FINISHED AT $(date)
